from datetime import datetime, timedelta, date, time

# ============================================================
# üïì CHUY·ªÇN GI·ªú D√ôNG CHO T√çNH TO√ÅN
# ============================================================
def to_datetime(val):
    """Chuy·ªÉn string/time/datetime v·ªÅ datetime h·ª£p l·ªá."""
    if isinstance(val, datetime): 
        return val
    if isinstance(val, time): 
        return datetime.combine(date.today(), val)
    if isinstance(val, str):
        val = val.split('.')[0].strip()
        for fmt in ("%H:%M:%S", "%H:%M"):
            try:
                return datetime.strptime(val, fmt)
            except:
                pass
    return None
# ============================================================
# üíµ ƒê·ªåC THAM S·ªê L∆Ø∆†NG (T·ªêI ∆ØU + AN TO√ÄN)
# ============================================================
def get_tham_so_luong(cursor):
    """
    ƒê·ªçc to√†n b·ªô tham s·ªë t·ª´ b·∫£ng ThamSoLuong v√† tr·∫£ v·ªÅ dict
    V√≠ d·ª•: {'PhuCapAnTrua': 30000.0, 'PIT_ThueThuNhap': 0.05, ...}
    """
    params = {}
    try:
        cursor.execute("SELECT TenThamSo, GiaTri FROM ThamSoLuong")
        rows = cursor.fetchall()
        for name, value in rows:
            if value is None:
                continue
            try:
                params[name] = float(value)
            except (ValueError, TypeError):
                params[name] = value
        return params
    except Exception as e:
        print(f"[ERROR] ‚ùå Kh√¥ng th·ªÉ ƒë·ªçc b·∫£ng ThamSoLuong: {e}")
        return {}
# ============================================================
# üí∞ T√çNH L∆Ø∆†NG NH√ÇN VI√äN (3 CA/NG√ÄY √ó 4 GI·ªú, D√ôNG L∆Ø∆†NG GI·ªú C∆† B·∫¢N)
# ============================================================
# ============================================================
# üßÆ H√ÄM CH√çNH: T√çNH L∆Ø∆†NG NH√ÇN VI√äN
# ============================================================
def tinh_luong_nv(cursor, ma_nv, thangnam, nguoi_tinh, save_to_db=True, return_detail=False):
    """
    ‚úÖ T√≠nh l∆∞∆°ng nh√¢n vi√™n theo 3 ca/ng√†y:
      - 1 ca = 4 ti·∫øng (s√°ng / chi·ªÅu / t·ªëi)
      - < 4h ‚Üí t√≠nh theo gi·ªù (LuongGioCoBan √ó gi·ªù √ó h·ªá s·ªë)
      - ‚â• 4h ‚Üí t√≠nh tr·ªçn ca (500k ca ng√†y, 800k ca t·ªëi)
      - > 4h ‚Üí c·ªông th√™m tƒÉng ca (theo gi·ªù √ó h·ªá s·ªë tƒÉng ca)
      - C√≥ ph·∫°t ƒëi tr·ªÖ, ph·ª• c·∫•p, PIT, l∆∞u DB
    """

    # === 0Ô∏è‚É£ L·∫•y tham s·ªë h·ªá th·ªëng ===
    params = get_tham_so_luong(cursor)
    current_month = thangnam.month
    current_year = thangnam.year

    # === 1Ô∏è‚É£ L·∫•y th√¥ng tin nh√¢n vi√™n ===
    cursor.execute("SELECT HoTen, ChucVu, LuongGioCoBan FROM NhanVien WHERE MaNV=?", (ma_nv,))
    row = cursor.fetchone()
    if not row:
        return (0, 0, []) if return_detail else (0, 0)

    ho_ten, chucvu, luong_gio_cb = row
    chucvu = (chucvu or "").lower()

    # üßæ √âp ki·ªÉu l∆∞∆°ng gi·ªù c∆° b·∫£n sang float
    try:
        if luong_gio_cb is None:
            luong_gio_cb = 100_000.0
        elif isinstance(luong_gio_cb, Decimal):
            luong_gio_cb = float(luong_gio_cb)
        else:
            luong_gio_cb = float(luong_gio_cb)
    except Exception as e:
        print(f"[WARN] ‚ö†Ô∏è Kh√¥ng √©p ƒë∆∞·ª£c LuongGioCoBan cho {ma_nv}: {e}")
        luong_gio_cb = 100_000.0

    # === 2Ô∏è‚É£ H·ªá s·ªë ch·ª©c v·ª• ===
    if "hr" in chucvu or "nh√¢n s·ª±" in chucvu:
        he_so_cv = 2.2
    elif "tr∆∞·ªüng ph√≤ng" in chucvu:
        he_so_cv = 2.0
    elif "ph√≥ ph√≤ng" in chucvu:
        he_so_cv = 1.5
    elif "th·ª±c t·∫≠p" in chucvu:
        he_so_cv = 0.8
    elif "th·ª≠ vi·ªác" in chucvu:
        he_so_cv = params.get("PhanTramLuongThuViec", 0.85)
    else:
        he_so_cv = 1.0

    # === 3Ô∏è‚É£ D·ªØ li·ªáu ch·∫•m c√¥ng ===
    cursor.execute("""
        SELECT 
            CC.MaCa, CC.NgayChamCong, CC.GioVao, CC.GioRa,
            CLV.GioBatDau, CLV.GioKetThuc, CLV.TenCa
        FROM ChamCong CC
        LEFT JOIN CaLamViec CLV ON CC.MaCa = CLV.MaCa
        WHERE CC.MaNV = ?
          AND MONTH(CC.NgayChamCong) = ?
          AND YEAR(CC.NgayChamCong) = ?
          AND (CC.DaXoa IS NULL OR CC.DaXoa IN (0, 1))
        ORDER BY CC.NgayChamCong, CC.MaCa
    """, (ma_nv, current_month, current_year))
    cham_cong_records = cursor.fetchall()
    print(f"[DEBUG] üìÖ {ma_nv} c√≥ {len(cham_cong_records)} b·∫£n ghi ch·∫•m c√¥ng.")

    if not cham_cong_records:
        return (0, 0, []) if return_detail else (0, 0)

    tong_gio, tong_tien = 0.0, 0.0
    chi_tiet_ca = []

    # === 4Ô∏è‚É£ X·ª≠ l√Ω t·ª´ng ca ===
    for ma_ca, ngay, gio_vao_raw, gio_ra_raw, gio_bd, gio_kt, ten_ca in cham_cong_records:
        if not gio_vao_raw or not gio_ra_raw:
            chi_tiet_ca.append({
                "NgayChamCong": ngay.strftime("%d/%m/%Y"),
                "Ca": ten_ca or ma_ca,
                "GioVao": "‚Äî",
                "GioRa": "‚Äî",
                "SoGio": 0,
                "HeSo": he_so_cv,
                "Tien": 0,
                "LyDoTru": "‚ö†Ô∏è Ch∆∞a c√≥ gi·ªù v√†o/ra",
                "CongThuc": ""
            })
            continue

        # ‚úÖ Gh√©p gi·ªù
        gio_vao = datetime.combine(ngay, gio_vao_raw.time())
        gio_ra = datetime.combine(ngay, gio_ra_raw.time())
        if gio_ra < gio_vao:
            gio_ra += timedelta(days=1)

        so_gio = round((gio_ra - gio_vao).total_seconds() / 3600, 2)
        tong_gio += so_gio

        # üïí ƒêi tr·ªÖ
        gio_bd_dt = datetime.combine(ngay, gio_bd or time(8, 0))
        di_tre = max((gio_vao - gio_bd_dt).total_seconds() / 60, 0)
        cuoi_tuan = ngay.weekday() >= 5
        he_so_tang_ca = params.get("HeSoTangCaNgayThuong", 1.5 if not cuoi_tuan else 2.0)

        # üí∏ Ph·∫°t ƒëi tr·ªÖ
        phat = 0
        if di_tre <= 5:
            ly_do = "ƒê√∫ng gi·ªù"
        elif di_tre <= 30:
            phat = params.get("PhatTre30", 50_000)
            ly_do = f"Tr·ªÖ {int(di_tre)} ph√∫t (ph·∫°t 50k)"
        elif di_tre <= 60:
            phat = params.get("PhatTre60", 100_000)
            ly_do = f"Tr·ªÖ {int(di_tre)} ph√∫t (ph·∫°t 100k)"
        else:
            phat = params.get("PhatTre120", 200_000)
            ly_do = f"Tr·ªÖ {int(di_tre)} ph√∫t (ph·∫°t 200k)"

        # üí∞ T√≠nh l∆∞∆°ng theo ca
        LUONG_CA_NGAY = 500_000
        LUONG_CA_TOI = 800_000
        la_ca_toi = any(x in (ten_ca or "").lower() for x in ["t·ªëi", "ƒë√™m", "ca 3"])
        muc_ca_nv = LUONG_CA_TOI if la_ca_toi else LUONG_CA_NGAY

        note_them = ""
        if so_gio < 4:
            # Ch∆∞a ƒë·ªß ca ‚Üí t√≠nh theo gi·ªù
            luong_tam = so_gio * luong_gio_cb * he_so_cv
            note_them = f"; ch∆∞a ƒë·ªß 4h ‚Üí {so_gio}h √ó {luong_gio_cb:,}"
        else:
            # ƒê·ªß ca ‚Üí t√≠nh tr·ªçn ca
            luong_tam = muc_ca_nv * he_so_cv
            # N·∫øu l√†m h∆°n 4h ‚Üí tƒÉng ca
            if so_gio > 4:
                gio_tang_ca = round(so_gio - 4, 2)
                luong_tam += gio_tang_ca * luong_gio_cb * he_so_cv * he_so_tang_ca
                note_them = f"; tƒÉng ca {gio_tang_ca}h"

        # T·ªïng ti·ªÅn sau ph·∫°t
        tien = luong_tam - phat
        tong_tien += tien
        ly_do += note_them

        if return_detail:
            chi_tiet_ca.append({
                "NgayChamCong": ngay.strftime("%d/%m/%Y"),
                "Ca": ten_ca or ma_ca,
                "GioVao": gio_vao.strftime("%H:%M"),
                "GioRa": gio_ra.strftime("%H:%M"),
                "SoGio": so_gio,
                "HeSo": he_so_cv,
                "Tien": round(tien, 0),
                "LyDoTru": ly_do,
                "CongThuc": f"{'Ca t·ªëi' if la_ca_toi else 'Ca ng√†y'}: {muc_ca_nv:,} √ó {he_so_cv} {note_them} ‚àí {phat:,}"
            })

    # === 5Ô∏è‚É£ Ph·ª• c·∫•p + Thu·∫ø ===
    phu_cap_xang = params.get("PhuCapXangXe", 500_000)
    phu_cap_an = params.get("PhuCapAnTrua", 30_000) * len(cham_cong_records)
    phu_cap_khac = params.get("PhuCapKhac", 200_000)
    phu_cap = phu_cap_xang + phu_cap_an + phu_cap_khac

    pit = tong_tien * params.get("PIT_ThueThuNhap", 0.05)
    tong_tien_thuc = tong_tien + phu_cap - pit

    # === 6Ô∏è‚É£ L∆∞u DB ===
    if save_to_db:
        thang_nam_date = thangnam.replace(day=1)
        cursor.execute("DELETE FROM Luong WHERE MaNV=? AND ThangNam=?", (ma_nv, thang_nam_date))
        cursor.execute("""
            INSERT INTO Luong (MaNV, ThangNam, SoGioLam, TongTien, TrangThai, NguoiTinhLuong, NgayTinhLuong, DaXoa)
            VALUES (?, ?, ?, ?, 1, ?, GETDATE(), 1)
        """, (ma_nv, thang_nam_date, tong_gio, tong_tien_thuc, nguoi_tinh))

    # === 7Ô∏è‚É£ Debug t·ªïng k·∫øt ===
    print(f"[DEBUG] üí∞ {ma_nv} | T·ªïng gi·ªù: {tong_gio:.2f}h | T·ªïng ti·ªÅn: {tong_tien_thuc:,.0f}ƒë")

    # === 8Ô∏è‚É£ Tr·∫£ k·∫øt qu·∫£ ===
    return (
        round(tong_gio, 2),
        round(tong_tien_thuc, 0),
        chi_tiet_ca
    ) if return_detail else (round(tong_gio, 2), round(tong_tien_thuc, 0))