from flask import Blueprint, redirect, url_for, flash, current_app
from datetime import datetime
from threading import Thread
from core.db_utils import get_sql_connection
from core.decorators import require_role
from core.attendance_utils import cap_nhat_vang_va_phep
from core.email_utils import send_email_notification

update_absences_bp = Blueprint("update_absences_bp", __name__)

@update_absences_bp.route("/update_absences", methods=["POST"])
@require_role("admin", "hr")
def update_absences():
    """
    ‚úÖ C·∫≠p nh·∫≠t tr·∫°ng th√°i v·∫Øng v√† g·ª≠i email nh·∫Øc nh·ªü cho nh√¢n vi√™n v·∫Øng m·∫∑t.
    - C·∫≠p nh·∫≠t tr·∫°ng th√°i v·∫Øng trong LichLamViec / ChamCong
    - G·ª≠i mail song song trong thread ri√™ng (c√≥ app_context)
    - Ghi l·∫°i l·ªãch s·ª≠ g·ª≠i mail trong b·∫£ng LichSuEmail
    """
    conn = get_sql_connection()
    cursor = conn.cursor()
    sent_count = 0  # ‚úÖ KH·ªûI T·∫†O BI·∫æN TR∆Ø·ªöC

    try:
        # 1Ô∏è‚É£ C·∫≠p nh·∫≠t tr·∫°ng th√°i v·∫Øng
        cap_nhat_vang_va_phep()
        print("‚úÖ ƒê√£ c·∫≠p nh·∫≠t tr·∫°ng th√°i v·∫Øng trong b·∫£ng LichLamViec / ChamCong.")

        # 2Ô∏è‚É£ L·∫•y danh s√°ch nh√¢n vi√™n v·∫Øng h√¥m nay
        cursor.execute("""
            SELECT NV.MaNV, NV.HoTen, NV.Email, PB.TenPB, CLV.TenCa,
                   CLV.GioBatDau, CLV.GioKetThuc, CC.NgayChamCong
            FROM ChamCong CC
            JOIN NhanVien NV ON CC.MaNV = NV.MaNV
            JOIN PhongBan PB ON NV.MaPB = PB.MaPB
            JOIN CaLamViec CLV ON CC.MaCa = CLV.MaCa
            WHERE CONVERT(DATE, CC.NgayChamCong) = CONVERT(DATE, GETDATE())
              AND CC.TrangThai = 0              -- 0 = V·∫Øng
              AND NV.TrangThai = 1              -- Nh√¢n vi√™n ƒëang ho·∫°t ƒë·ªông
              AND NV.Email IS NOT NULL
              AND NV.Email <> ''
              AND (CC.DaXoa = 0 OR CC.DaXoa = 1);
        """)
        absents = cursor.fetchall()

        if not absents:
            flash("üéâ Kh√¥ng c√≥ nh√¢n vi√™n n√†o v·∫Øng h√¥m nay!", "info")
            return redirect(url_for("attendance_bp.attendance_report"))

        app = current_app._get_current_object()  # ‚úÖ L·∫•y app ƒë·ªÉ d√πng trong thread

        # 3Ô∏è‚É£ H√†m g·ª≠i email (ch·∫°y trong thread)
        def send_absent_email(app, ma_nv, hoten, email, ten_pb, ten_ca, gio_bd, gio_kt, ngay_lam):
            """G·ª≠i email cho 1 nh√¢n vi√™n v√† ghi l·ªãch s·ª≠"""
            with app.app_context():
                local_conn = get_sql_connection()
                local_cursor = local_conn.cursor()
                try:
                    ngay_str = (
                        ngay_lam.strftime("%d/%m/%Y")
                        if hasattr(ngay_lam, "strftime")
                        else str(ngay_lam)
                    )

                    # üì® So·∫°n n·ªôi dung mail
                    subject = f"üì© Th√¥ng b√°o v·∫Øng m·∫∑t - Ca {ten_ca} ng√†y {ngay_str}"
                    body = (
                        f"K√≠nh g·ª≠i {hoten},\n\n"
                        f"H·ªá th·ªëng FaceID ghi nh·∫≠n b·∫°n ƒë√£ **v·∫Øng m·∫∑t** trong ca l√†m vi·ªác **{ten_ca}** ng√†y **{ngay_str}**.\n"
                        f"üëâ Th·ªùi gian ca: {gio_bd} - {gio_kt}\n"
                        f"üìç Ph√≤ng ban: {ten_pb}\n\n"
                        f"N·∫øu c√≥ l√Ω do ch√≠nh ƒë√°ng, vui l√≤ng ph·∫£n h·ªìi l·∫°i b·ªô ph·∫≠n nh√¢n s·ª±.\n\n"
                        f"Tr√¢n tr·ªçng,\nH·ªá th·ªëng FaceID"
                    )

                    # üß≠ G·ª≠i email
                    status = "Th√†nh c√¥ng" if send_email_notification(email, subject, body) else "Th·∫•t b·∫°i"
                    print(f"üì¨ G·ª≠i mail {status} ƒë·∫øn {hoten} ({email})")

                    # üßæ Ghi l·ªãch s·ª≠ g·ª≠i mail
                    local_cursor.execute("""
                        INSERT INTO LichSuEmail (MaTK, EmailTo, LoaiThongBao, ThoiGian, TrangThai)
                        SELECT TK.MaTK, NV.Email, N'Nh·∫Øc nh·ªü v·∫Øng m·∫∑t', GETDATE(), ?
                        FROM TaiKhoan TK JOIN NhanVien NV ON TK.MaNV = NV.MaNV
                        WHERE NV.MaNV = ?;
                    """, (status, ma_nv))
                    local_conn.commit()

                except Exception as e:
                    print(f"‚ùå L·ªói khi g·ª≠i mail cho {email}: {e}")
                finally:
                    local_conn.close()

        # 4Ô∏è‚É£ T·∫°o thread g·ª≠i mail song song
        for nv in absents:
            Thread(target=send_absent_email, args=(app, *nv), daemon=True).start()
            sent_count += 1

        flash(f"‚úÖ ƒê√£ k√≠ch ho·∫°t g·ª≠i {sent_count} email nh·∫Øc nh·ªü v·∫Øng m·∫∑t trong n·ªÅn!", "success")
        print(f"üíå ƒêang g·ª≠i {sent_count} email nh·∫Øc nh·ªü trong n·ªÅn...")

        conn.commit()
        return redirect(url_for("attendance_bp.attendance_report"))

    except Exception as e:
        print(f"‚ùå L·ªói x·∫£y ra khi c·∫≠p nh·∫≠t ho·∫∑c g·ª≠i mail: {e}")
        try:
            conn.rollback()
        except Exception as err:
            print(f"‚ö†Ô∏è Kh√¥ng th·ªÉ rollback: {err}")

        flash(f"‚ùå L·ªói khi c·∫≠p nh·∫≠t ho·∫∑c g·ª≠i mail: {e}", "danger")
        return redirect(url_for("attendance_bp.attendance_report"))

    finally:
        try:
            conn.close()
        except Exception as err:
            print(f"‚ö†Ô∏è L·ªói khi ƒë√≥ng connection: {err}")
