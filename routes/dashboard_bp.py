from flask import Blueprint, render_template, request
from core.db_utils import get_sql_connection
from datetime import datetime
from core.decorators import require_role

# ===========================================
# üìä Blueprint Dashboard t·ªïng h·ª£p
# ===========================================
dashboard_bp = Blueprint("dashboard_bp", __name__)

# ============================================================
# 1Ô∏è‚É£ DASHBOARD L∆Ø∆†NG (ph√¢n t√≠ch trung b√¨nh theo ph√≤ng ban)
# ============================================================
@dashboard_bp.route("/salary_dashboard")
@require_role("hr", "admin")
def salary_dashboard():
    """Hi·ªÉn th·ªã th·ªëng k√™ l∆∞∆°ng trung b√¨nh theo ph√≤ng ban"""
    conn = get_sql_connection()
    cursor = conn.cursor()

    # üóì L·ªçc theo th√°ng/nƒÉm
    month = int(request.args.get("month", datetime.now().month))
    year = int(request.args.get("year", datetime.now().year))

    # üü¢ L∆∞∆°ng trung b√¨nh theo ph√≤ng ban
    cursor.execute("""
        SELECT PB.TenPB, AVG(L.TongLuong) AS AvgSalary
        FROM Luong L
        JOIN NhanVien NV ON L.MaNV = NV.MaNV
        JOIN PhongBan PB ON NV.MaPB = PB.MaPB
        WHERE MONTH(L.ThangNam)=? AND YEAR(L.ThangNam)=? AND L.DaXoa=1
        GROUP BY PB.TenPB
    """, (month, year))
    salary_data = cursor.fetchall()
    departments = [r[0] for r in salary_data]
    avg_salaries = [float(r[1]) for r in salary_data]

    # üü¢ T·ª∑ l·ªá ch·∫•m c√¥ng
    cursor.execute("""
        SELECT 
            SUM(CASE WHEN TrangThai=1 THEN 1 ELSE 0 END) AS DiDungGio,
            SUM(CASE WHEN TrangThai=2 THEN 1 ELSE 0 END) AS DiMuon,
            SUM(CASE WHEN TrangThai=0 THEN 1 ELSE 0 END) AS Vang
        FROM ChamCong
        WHERE MONTH(NgayChamCong)=? AND YEAR(NgayChamCong)=?
    """, (month, year))
    stats = cursor.fetchone()
    conn.close()

    return render_template(
        "salary_dashboard.html",
        departments=departments,
        avg_salaries=avg_salaries,
        stats=stats,
        month=month,
        year=year
    )


# ============================================================
# 2Ô∏è‚É£ DASHBOARD NH√ÇN S·ª∞ (HR / ADMIN)
# ============================================================
@dashboard_bp.route("/hr_dashboard")
@require_role("hr", "admin")
def hr_dashboard():
    """Hi·ªÉn th·ªã t·ªïng quan nh√¢n s·ª± (s·ªë nh√¢n vi√™n, ca l√†m, khu√¥n m·∫∑t...)"""
    conn = get_sql_connection()
    cursor = conn.cursor()

    # üîπ Kh·ªüi t·∫°o s·∫µn ƒë·ªÉ tr√°nh l·ªói Undefined
    total_employees = total_shifts = total_faces = 0
    departments = []
    avg_salaries = []
    stats = [0, 0, 0]  # [ƒëi ƒë√∫ng gi·ªù, ƒëi mu·ªôn, v·∫Øng]

    try:
        # 1Ô∏è‚É£ T·ªïng nh√¢n vi√™n ƒëang ho·∫°t ƒë·ªông
        cursor.execute("SELECT COUNT(*) FROM NhanVien WHERE TrangThai = 1")
        total_employees = cursor.fetchone()[0] or 0

        # 2Ô∏è‚É£ T·ªïng ca l√†m vi·ªác ƒëang ho·∫°t ƒë·ªông
        cursor.execute("SELECT COUNT(*) FROM CaLamViec WHERE TrangThai = 1")
        total_shifts = cursor.fetchone()[0] or 0

        # 3Ô∏è‚É£ S·ªë nh√¢n vi√™n ƒë√£ ƒëƒÉng k√Ω khu√¥n m·∫∑t
        cursor.execute("SELECT COUNT(*) FROM KhuonMat WHERE TrangThai = 1")
        total_faces = cursor.fetchone()[0] or 0

        # 4Ô∏è‚É£ Bi·ªÉu ƒë·ªì: L∆∞∆°ng trung b√¨nh theo ph√≤ng ban
        cursor.execute("""
            SELECT PB.TenPB, AVG(L.TongLuong) AS LuongTB
            FROM Luong L
            JOIN NhanVien NV ON L.MaNV = NV.MaNV
            JOIN PhongBan PB ON NV.MaPB = PB.MaPB
            WHERE PB.TrangThai = 1 AND NV.TrangThai = 1
            GROUP BY PB.TenPB
        """)
        rows = cursor.fetchall()
        departments = [r[0] for r in rows]
        avg_salaries = [float(r[1]) if r[1] else 0 for r in rows]

        # 5Ô∏è‚É£ Bi·ªÉu ƒë·ªì: Th·ªëng k√™ ch·∫•m c√¥ng
        cursor.execute("""
            SELECT 
                SUM(CASE WHEN TrangThai = 1 THEN 1 ELSE 0 END) AS DungGio,
                SUM(CASE WHEN TrangThai = 2 THEN 1 ELSE 0 END) AS DiMuon,
                SUM(CASE WHEN TrangThai = 3 THEN 1 ELSE 0 END) AS Vang
            FROM ChamCong
            WHERE CONVERT(DATE, NgayChamCong) >= DATEADD(DAY, -30, GETDATE())
        """)
        row = cursor.fetchone()
        if row:
            stats = [row[0] or 0, row[1] or 0, row[2] or 0]

    except Exception as e:
        print("‚ùå L·ªói khi t·∫£i dashboard HR:", e)
    finally:
        conn.close()

    return render_template(
        "hr_dashboard.html",
        total_employees=total_employees,
        total_shifts=total_shifts,
        total_faces=total_faces,
        departments=departments,
        avg_salaries=avg_salaries,
        stats=stats
    )
