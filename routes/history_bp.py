# routes/history_bp.py
from flask import Blueprint, render_template, request, session, flash
from core.db_utils import get_sql_connection
from core.decorators import require_role  # ho·∫∑c import require_role t·ª´ ƒë√∫ng n∆°i b·∫°n ƒë·ªãnh nghƒ©a

history_bp = Blueprint("history_bp", __name__)

# ============================================================
# üïí L·ªäCH S·ª¨ THAY ƒê·ªîI (ADMIN)
# ============================================================
@history_bp.route("/history")
@require_role("admin")
def history():
    conn = get_sql_connection()
    cursor = conn.cursor()

    # --- L·∫•y tham s·ªë t·ª´ form ho·∫∑c query ---
    selected_table = request.args.get("table")
    selected_action = request.args.get("action")
    keyword_user = request.args.get("user", "").strip()

    # --- C√¢u truy v·∫•n ch√≠nh ---
    base_query = """
        SELECT 
            ls.*, 
            COALESCE(tk.TenDangNhap, ls.NguoiThucHien) AS TenDangNhap
        FROM LichSuThayDoi ls
        LEFT JOIN TaiKhoan tk 
            ON TRY_CAST(ls.NguoiThucHien AS INT) = tk.MaTK
    """

    filters = []
    params = []

    # --- L·ªçc theo b·∫£ng ---
    if selected_table:
        filters.append("ls.TenBang = ?")
        params.append(selected_table)

    # --- L·ªçc theo h√†nh ƒë·ªông ---
    if selected_action:
        filters.append("ls.HanhDong = ?")
        params.append(selected_action)

    # --- L·ªçc theo ng∆∞·ªùi th·ª±c hi·ªán (LIKE) ---
    if keyword_user:
        filters.append("(tk.TenDangNhap LIKE ? OR ls.NguoiThucHien LIKE ?)")
        like_pattern = f"%{keyword_user}%"
        params.extend([like_pattern, like_pattern])

    if filters:
        base_query += " WHERE " + " AND ".join(filters)

    base_query += " ORDER BY ls.ThoiGian DESC"

    # --- Truy v·∫•n d·ªØ li·ªáu l·ªãch s·ª≠ ---
    try:
        cursor.execute(base_query, params)
        rows = cursor.fetchall()

        # --- Danh s√°ch b·∫£ng v√† h√†nh ƒë·ªông (th√™m ‚ÄúXem chi ti·∫øt‚Äù) ---
        cursor.execute("SELECT DISTINCT TenBang FROM LichSuThayDoi ORDER BY TenBang")
        table_names = [r[0] for r in cursor.fetchall()]

        cursor.execute("""
            SELECT DISTINCT HanhDong 
            FROM LichSuThayDoi 
            WHERE HanhDong IN (N'Th√™m', N'S·ª≠a', N'X√≥a', N'Kh√¥i ph·ª•c', N'Xem chi ti·∫øt')
            ORDER BY HanhDong
        """)
        action_names = [r[0] for r in cursor.fetchall()]

    except Exception as e:
        flash(f"‚ùå L·ªói khi t·∫£i l·ªãch s·ª≠ thay ƒë·ªïi: {e}", "danger")
        rows, table_names, action_names = [], [], []

    finally:
        conn.close()

    return render_template(
        "history.html",
        histories=rows,
        tables=table_names,
        actions=action_names,
        selected_table=selected_table,
        selected_action=selected_action,
        keyword_user=keyword_user
    )
